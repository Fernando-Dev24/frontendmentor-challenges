// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model user
model Users {
  id         String   @id @default(uuid())
  username   String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  Notes      Notes[]
}

model Notes {
  id         String   @id @default(uuid())
  title      String
  content    String?
  tags       String[]
  archived   Boolean  @default(false)
  created_at DateTime @default(now())
  update_at  DateTime @updatedAt

  // relations
  user    Users  @relation(fields: [user_id], references: [id])
  user_id String
}

/**
 * model user_notes {
 * users   Users  @relation(fields: [user_id], references: [id])
 * user_id String
 * notes   Notes  @relation(fields: [note_id], references: [id])
 * note_id String
 * @@id([user_id, note_id])
 * }
 */

/**
 * model note_edits {
 * id        String   @id @default(uuid())
 * update_at DateTime @updatedAt
 * diff      String?
 * // relations
 * notes   Notes  @relation(fields: [note_id], references: [id])
 * note_id String
 * users   Users  @relation(fields: [user_id], references: [id])
 * user_id String
 * }
 */

/**
 * model note_tags {
 * notes   Notes  @relation(fields: [note_id], references: [id])
 * note_id String
 * tags   Tags   @relation(fields: [tag_id], references: [id])
 * tag_id String
 * @@id([note_id, tag_id])
 * }
 */
